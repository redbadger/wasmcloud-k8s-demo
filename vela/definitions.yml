---
apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  name: actor
spec:
  workload:
    definition:
      apiVersion: wasmcloud.com/v1
      kind: Actor
  schematic:
    cue:
      template: |
        parameter: {
            name:  string
            image: string
        }
        output: {
            apiVersion: "wasmcloud.com/v1"
            kind:       "Actor"
            spec: {
              name: parameter.name
              image: parameter.image
            }
        }

---
apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  name: capability
spec:
  workload:
    definition:
      apiVersion: wasmcloud.com/v1
      kind: Capability
  schematic:
    cue:
      template: |
        parameter: {
            name:  string
            image: string
        }
        output: {
            apiVersion: "wasmcloud.com/v1"
            kind:       "Capability"
            spec: {
              name: parameter.name
              image: parameter.image
            }
        }
---
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  name: spreadscaler
spec:
  podDisruptive: false
  schematic:
    cue:
      template: |
        parameter: {
            replicas: int
        }
---
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  name: linkdef
spec:
  podDisruptive: false
  schematic:
    cue:
      template: |
        parameter: {
            target: string
        }
---
apiVersion: core.oam.dev/v1beta1
kind: WorkflowStepDefinition
metadata:
  name: read-application
spec:
  schematic:
    cue:
      template: |
        import (
        	"vela/op"
          "encoding/json"
        )
        application: op.#Read & {
        	value: {
        		apiVersion: "core.oam.dev/v1beta1"
        		kind:       "Application"
        		metadata: {
        			name:      context.name
        		}
        	}
        }
        notify: op.#HTTPPost & {
           url: "http://host.docker.internal:8081"
           request: body: json.Marshal(application.value)
        }
